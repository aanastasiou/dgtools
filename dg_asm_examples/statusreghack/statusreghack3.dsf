# Hacking the status register. Save and Restore.

# Since we confirmed that it is possible to use the "hidden" 
# bits of the status register, is it possible to use it so that
# we save and restore the status register WITHOUT using additional 
# memory?

# It turns out that this is more difficult than it sounds at first, 
# because of the way the instruction set interacts with the carry 
# bit.

# The specific problem is that COPYRR modifies the zero flag. Therefore
# any computation that ends with a COPYRR in order to set the status 
# register to some new value ends up MODIFYING it as well.

# The answer? Do EVERYTHING with bit operations.

.EQU status_reg=252
.EQU led_reg=255
.EQU carry_bit=1
.EQU zero_bit=0

SBR carry_bit status_reg    # Set both bits of th status register
SBR zero_bit status_reg
CALL save_status_reg        # Save that value of the status register
COPYRR status_reg R0        # Check the content of R0
CBR carry_bit status_reg
CBR zero_bit status_reg     # Modify both flags and check the content again
COPYRR status_reg R0
CALL load_status_reg
COPYRR status_reg R0        # Recall the status register and examine it via R0.
HALT

save_status_reg:
CBR 3 status_reg                # Clear both higher bits
CBR 4 status_reg
BCRSC zero_bit status_reg       # Test bit 0 if it is 1 set the 4th bit
JUMP save_status_reg_zero_bit
save_status_reg_test_carry_bit:
BCRSC carry_bit status_reg      # Test bit 1 if it is 1 set the 5th bit
JUMP save_status_reg_carry_bit
save_status_reg_return:
RETURN

save_status_reg_zero_bit:
SBR 3 status_reg
JUMP save_status_reg_test_carry_bit
save_status_reg_carry_bit:
SBR 4 status_reg
JUMP save_status_reg_return

load_status_reg:                
CBR zero_bit status_reg                # Clear both higher bits
CBR carry_bit status_reg
BCRSC 3 status_reg       # Test bit 3 if it is 1 set the zero bit
JUMP load_status_reg_zero_bit
load_status_reg_test_carry_bit:
BCRSC 4 status_reg      # Test bit 4 if it is 1 set the carry bit
JUMP load_status_reg_carry_bit
load_status_reg_return:
RETURN

load_status_reg_zero_bit:
SBR zero_bit status_reg
JUMP load_status_reg_test_carry_bit
load_status_reg_carry_bit:
SBR carry_bit status_reg
JUMP load_status_reg_return

R0:
.DB 0
