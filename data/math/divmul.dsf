# int2str: Converts a byte to its string representation
# The conversion routine is very simple and involves two steps:
#    1. Decompose the number 
#    2. Synthesize a "string"

.EQU status_reg=252

# Program Entry Point
COPYLR 129 r0
COPYLR 0 r1
COPYLR 2 r2
COPYLR 0 r3
CALL mul_wacc
HALT

wdiv:
# Performs wacc/r1r0
# Returns r1r0:Ratio, r3r2:Remainder
CBR 0 status_reg # Zero bit
CBR 1 status_reg # Carry bit
COPYLR 0 r1
sub_again:
INCR r1
SUBRA r0
# Check if the last SUB hit zero 
BCRSS 0 status_reg
JUMP check_carry
JUMP sub_again
check_carry:
# Maybe the last SUB overshot zero
BCRSS 1 status_reg
JUMP sub_again
# Adjust results
ADDRA r0
DECR r1
COPYAR r0
RETURN


mul_wacc:
# Performs r1r0*r3r2 using the wide accumulator
# NOTE: This is still 8bit multiplication
# Returns the product in the wide accumulator
CBR 0 status_reg # Zero bit
CBR 1 status_reg # Carry bit
# Clear the wide accumulator
COPYLR 0 wacc_l
COPYLR 0 wacc_h
COPYLR 8 t0
mul_add_start_wacc:
BCRSS 0 r2
JUMP mul_con_wacc
mul_add_wacc:
CALL addlwacc
mul_con_wacc:
CALL shlr1r0
CBR 1 status_reg
CALL shrr3r2
CBR 1 status_reg
DECRJZ t0
JUMP mul_add_start_wacc
RETURN

cpylwacc:
# Loads the wide accumulator with the literal described by r1r0
COPYRR r0 wacc_l
COPYRR r1 wacc_h
RETURN

addlwacc:
# Adds r1r0 to the wide accumulator
COPYRA wacc_l
ADDRA r0
BCRSS 1 status_reg
JUMP addlwacc_no_carry
CALL addlwacc_high
ADDLA 1
COPYAR wacc_h
RETURN
addlwacc_no_carry:
CALL addlwacc_high
COPYAR wacc_h
RETURN 
addlwacc_high:
COPYAR wacc_l
COPYRA wacc_h
ADDRA r1
RETURN

shlr1r0:
# Shift r1r0 left by 1
CBR 1 status_reg
SHIFTRL r0
SHIFTRL r1
RETURN

shrr1r0:
# Shift r1r0 right by 1
CBR 1 status_reg
SHIFTRR r1
SHIFTRR r0
RETURN

shlr3r2:
# Shift r3r2 left by 1
CBR 1 status_reg
SHIFTRL r2
SHIFTRL r3
RETURN

shrr3r2:
# Shift r3r2 right by 1
CBR 1 status_reg
SHIFTRR r3
SHIFTRR r2
RETURN

cpy_ind:
# Indirect copy
.DB 7     # Digirule2 ASM COPYRR opcode
cpy_from:
.DB 0
cpy_to:
.DB 0
RETURN

# General Registers
r1:
.DB 0
r0:
.DB 0
r3:
.DB 0
r2:
.DB 0
t0:
.DB 0
t1:
.DB 0
t2:
.DB 0
t3:
.DB 0

wacc:
wacc_h:
.DB 0
wacc_l:
.DB 0

ascii_str:
.DB 0,0,0
