When you write an "if (R0>R1) {} else {}", how is it evaluated by a CPU? 
Here it is, on a #Digirule, simplest form of branching. 

All figures using #dgtools (https://github.com/aanastasiou/dgtools)


# If (expression) run_block_a else run_block_b

# A high level "if" captures an ASM pattern where an 
# expression is evaluated and based on that expression's 
# result deciding whether to execute "run_block_a" or 
# "run_block_b" block of commands.

# In a higher level language, this might be written as:
# if

.EQU status_reg=252
.EQU carry_bit=1
.EQU zero_bit=0

COPYRA R0
SUBRA R1
# R0<R1?
# BCRSC carry_bit status_reg
# JUMP lt
# JUMP gte
# lt:
# COPYLR 0xF0 R3
# HALT
# gte:
# COPYLR 0x0F R3
# HALT
# R0<=R1?
BCRSC carry_bit status_reg
JUMP lt
JUMP gte
lt:
COPYLR 0xF0 R3
HALT
gte:
BCRSC zero_bit status_reg
JUMP gte_final
JUMP gt_final
HALT
gte_final:
COPYLR 0x18 R3
HALT
gt_final:
COPYLR 0x0F R3
HALT


R0:
.DB 1
R1:
.DB 2
R3:
.DB 0xFF
